import { Router } from "express"
const userRouter = Router()
import User from "../models/User.js" // Importing the User model

import { v2 as cloudinary } from "cloudinary" // Cloudinary for managing user avatars

import { faker } from "@faker-js/faker" // Faker for generating random user data

// Route to reset users and recreate 20 new users with random data
userRouter.post(`/reset-users/${process.env.RESET}`, async (req, res) => {
  try {
    // Delete all existing users from the database
    await User.deleteMany({})

    // Delete all user avatar images from Cloudinary under the specified prefix
    await cloudinary.api.delete_resources_by_prefix("vinted/avatar-users-v2")

    // Create 20 new users with random data generated by faker
    for (let i = 0; i < 20; i++) {
      const newUser = new User({
        email: faker.internet.email().toLowerCase(), // Generate a random email
        account: {
          username: faker.internet.displayName(), // Generate a random username
          avatar: faker.image.avatar() // Generate a random avatar image URL
        },
        password: faker.internet.password() // Generate a random password
      })

      // Save each new user to the database
      await newUser.save()
    }

    // Respond with the number of newly created users
    res.status(201).json({
      message: `all users created count : ${(await User.find()).length}`
    })
  } catch (error) {
    // Send an error response in case of failure
    res.status(500).json({ message: error.message })
  }
})

export default userRouter
